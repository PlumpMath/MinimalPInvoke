/* Generated by JSIL v0.8.1 build 25442. See http://jsil.org/ for more information. */ 
'use strict';
var $asm00 = JSIL.DeclareAssembly("MinimalPInvoke, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.SetEntryPoint($asm00, $asm00.TypeRef("MinimalPInvoke.Program"), "Main", JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$asm01.TypeRef("System.String")])));

JSIL.DeclareNamespace("MinimalPInvoke");
/* class MinimalPInvoke.Program */ 

(function Program$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize(System.Array.Of($asm01.System.String))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.Console)) ();
  };

  function Program__ctor () {
  };

  function Program_Main (args) {
    $T01().WriteLine("test");
  };

  JSIL.MakeType({
      BaseType: $asm01.TypeRef("System.Object"), 
      Name: "MinimalPInvoke.Program", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Program__ctor
    );

    $.Method({Static:true , Public:false}, "Main", 
      JSIL.MethodSignature.Action($jsilcore.TypeRef("System.Array", [$.String])), 
      Program_Main
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

